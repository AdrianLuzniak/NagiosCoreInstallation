---
- name: Temporary disable SELinux, update system and install required dependencies for Nagios Core
  hosts: AnsibleTarget1
  become: true
  tasks:
    - name: Set SELinux to permissive mode temporarily
      command: setenforce 0
      ignore_errors: true

    - name: Install EPEL repository on Centos9
      dnf:
        name: epel-release
        state: present
        
    - name: Update and upgrade system packages
      dnf:
        name: "*"
        state: latest
      tags: update
    - name: Install required dependencies for Nagios Core
      dnf:
        name:
        - httpd
        - php
        - gcc
        - glibc
        - glibc-common
        - glibc-devel
        - gd
        - gd-devel
        - openssl-devel
        - make
        - net-snmp
        - net-snmp-utils
        - unzip
        - wget
        - libmcrypt
        - libmcrypt-devel
        - libcurl-devel
        state: present
      tags: dependencies

    - name: Install required dependencies for Nagios Plugins
      dnf:
        name:
          - autoconf
          - automake
          - libtool
          - pkg-config

- name: Create Nagios user and group
  hosts: AnsibleTarget1
  become: true
  tasks:
    - name: Create Nagios user with home directory and shell
      user:
        name: nagios
        create_home: yes 
        shell: /bin/bash

    - name: Create Nagcmd group for external commands
      group:
        name: nagcmd
        state: present
      
    - name: Add nagios user to nagcmd group
      user:
        name: nagios
        groups: nagcmd
        append: yes

    - name: Add apache user to nagcmd group
      user:
        name: apache
        groups: nagcmd
        append: yes
    
- name: Download and install Nagios Core 
  hosts: AnsibleTarget1
  become: true
  tasks: 
    - name: Download Nagios Core Source
      get_url:
        url: https://assets.nagios.com/downloads/nagioscore/releases/nagios-4.4.12.tar.gz
        dest: /tmp/nagios.tar.gz
    
    - name: Extract Nagios Core source
      unarchive:
        src: /tmp/nagios.tar.gz
        dest: /tmp/
        remote_src: yes
    
    - name: Compile and install Nagios Core
      shell: |
        cd /tmp/nagios-4.4.12
        ./configure --with-command-group=nagcmd
        make all
        make install
        make install-init
        make install-config
        make install-comandmode
        make install-webconf
      args:
        executable: /bin/bash

- name: Download and install Nagios Plugins
  hosts: AnsibleTarget1
  become: true
  tasks:
    - name: Ensure nagios-plugins directory is removed
      file:
        path: /tmp/nagios-plugins
        state: absent

    - name: Download Nagios plugins
      shell: |
          cd /tmp
          git clone https://github.com/nagios-plugins/nagios-plugins.git

    - name: Ensure /tmp/nagios-plugins has correct permissions
      file:
        path: /tmp/nagios-plugins
        mode: "2755"
        state: directory
        recurse: yes
        owner: root
        group: root

    - name: Install Nagios plugins
      shell: |
        cd /tmp/nagios-plugins
        ./tools/setup
        ./configure --prefix=/usr/local/nagios
        make
        make install
            

    - name: Ensure Nagios directories have correct ownership and permissions
      file:
        path: "{{ item }}"
        owner: nagios
        group: nagcmd
        mode: "2755"
        recurse: yes
      with_items:
        - /usr/local/nagios
        - /usr/local/nagios/var
        - /usr/local/nagios/var/rw
        - /usr/local/nagios/etc
      tags: permissions
      

- name: Configure Nagios admin account
  hosts: AnsibleTarget1
  become: true
  tasks:
    - name: Create Nagios admin account
      shell: htpasswd -bc /usr/local/nagios/etc/htpasswd.users nagiosadmin password
      args:
        executable: /bin/bash
      no_log: true # hide password - not display in system logs 

- name: Configure SELinux and start services
  hosts: AnsibleTarget1
  become: true
  tasks:
    - name: Configure SELinux to allow Apache
      command: setsebool -P httpd_can_network_connect 1

    - name: Enable and start Apache
      systemd:
        name: httpd
        state: started
        enabled: true

    - name: Enable and start Nagios
      systemd:
        name: nagios
        state: started
        enabled: true
    
- name: Configure firewall for Nagios
  hosts: AnsibleTarget1
  become: true
  vars:
    ports:
    - 80
    - 443
  tasks:
    - name: Open firewall ports
      firewalld:
        port: "{{item}}/tcp"
        permanent: true
        immediate: true
        state: enabled
      loop: "{{ports}}"
    
    - name: Reload firewall
      command: firewall-cmd --reload

- name: Check the status of Nagios service
  hosts: AnsibleTarget1
  become: true
  tasks: 
    - name: Ensure Nagios service is running
      command: systemctl status nagios
      register: nagios_status
      failed_when: nagios_status.rc != 0
      changed_when: false

    - name: Display nagios service status
      debug:
        msg: "{{ nagios_status.stdout }}"

  


  

    

