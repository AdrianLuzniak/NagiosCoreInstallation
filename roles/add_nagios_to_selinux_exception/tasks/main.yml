- name: Gather SELinux facts
  ansible.builtin.setup:
    gather_subset:
      - selinux

- name: Display SELinux status 
  debug:
    msg: "SELinux mode: {{ ansible_facts.selinux.mode }}"

- name: Save list of all SELinux loaded modules
  command: semodule -l
  register: selinux_modules_check
  changed_when: false

- name: Check if {{ nagios_module_name }} is loaded in SELinux
  set_fact:
    module_exists: "{{ nagios_module_name in selinux_modules_check.stdout }}"

- name: Ensure SELinux is in Enforcing mode
  command: setenforce 1
  when: (ansible_facts.selinux.mode != 'enforcing' and not module_exists) or force_add_module

- name: Get SELinux status (force refresh)
  command: getenforce
  register: selinux_mode
  changed_when: false

- name: Display SELinux status (force refresh)
  debug:
    msg: "SELinux mode: {{ selinux_mode.stdout }}"


- name: Display SELinux module status
  debug:
    msg: >-
      {% if module_exists %}
      ✅ SELinux module '{{ nagios_module_name }}' is already loaded.
      {% else %}
      ❌ SELinux module '{{ nagios_module_name }}' is NOT loaded.
      {% endif %}

- name: Copy NagiosRules.te to the server
  copy:
    src: "{{ local_nagios_rules_path }}"
    dest: "/tmp/{{ nagios_rules_file }}"
  when: not module_exists or force_add_module
  

- name: Display module name
  debug:
    msg: "{{ nagios_module_name }}"


- name: Remove existing SELinux module if force_add_module is true
  command: semodule -X 300 -r "{{ nagios_module_name }}"
  when: module_exists and force_add_module
  notify:
    - Debug "Module removed because force_add_module is true"

- name: Skip module creation if already exists and force_add_module is false
  debug:
    msg: "SELinux module '{{ nagios_module_name }}' already exists. Skipping module creation."
  when: module_exists and not force_add_module

- name: Compile the SELinux module .mod file
  command: checkmodule -M -m -o /tmp/NagiosRules.mod /tmp/{{ nagios_rules_file }}
  when: not module_exists or force_add_module

- name: Create the SELinux package .pp
  command: semodule_package -o /tmp/NagiosRules.pp -m /tmp/NagiosRules.mod
  when: not module_exists or force_add_module

- name: Load the SELinux module
  command: semodule -X 300 -i /tmp/NagiosRules.pp
  when: not module_exists or force_add_module

- name: Display SELinux module status
  debug:
    msg: >-
      {% if module_exists %}
      ✅ SELinux module '{{ nagios_module_name }}' is loaded.
      {% else %}
      ❌ SELinux module '{{ nagios_module_name }}' is NOT loaded.
      {% endif %}

