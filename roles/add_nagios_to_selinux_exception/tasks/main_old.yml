- name: Debug selinux status
  debug:
    msg: "SELinux status: {{ ansible_facts.selinux.status }}, Selinux mode: {{ ansible_facts.selinux.mode }}"

- name: Ensure SELinux is enabled
  command: setenforce 1
  register: selinux_enabled
  changed_when: selinux_enabled.rc == 0 # Only marks the change if the command was successful

- name: Debug selinux_enabled rc
  debug:
    msg: "SELinux status: {{ ansible_facts.selinux.status }}, Selinux mode: {{ ansible_facts.selinux.mode }}"

- name: Restart Nagios service
  systemd:
    name: nagios
    state: restarted
  when: selinux_enabled.changed

- name: Check permissions for nagios.cmd
  stat:
    path: "/usr/local/nagios/var/rw/nagios.cmd"
  register: nagios_cmd_file

- name: Debug nagios.cmd file permissions
  debug:
    msg: "Permissions: {{ nagios_cmd_file.stat.mode }}, Owner: {{ nagios_cmd_file.stat.pw_name }}, Group: {{ nagios_cmd_file.stat.gr_name }}"
  when: nagios_cmd_file.stat.exists


- name: Ensure nagios.cmd is writable by nagios user
  file:
    path: "/usr/local/nagios/var/rw/nagios.cmd"
    owner: nagios
    group: nagcmd
    mode: "0660"
  when: nagios_cmd_file.stat.exists and (nagios_cmd_file.stat.pw_name != "nagios" or nagios_cmd_file.stat.gr_name != "nagcmd" or nagios_cmd_file.stat.mode != "0660")


- name: Copy audit.log to /var/log/audit/audit.log
  copy:
    src: files/audit.log
    dest: /var/log/audit/audit.log
    owner: root
    group: root
    mode: "0755"
    backup: yes
  when: overwrite_audit


- name: Allow Nagios cmd.cgi access through SELinux if SELinux is enabled and errors are found
  shell: |
    sudo ausearch -m avc -c 'cmd.cgi' --raw | audit2allow -M nagios-cmdcgi
    sudo semodule -i nagios-cmdcgi.pp
  when: ansible_facts.selinux.mode == 'enforcing'
  ignore_errors: true


- name: Allow Nagios status.cgi access through SELinux if SELinux is enabled and errors are found
  shell: |
    sudo ausearch -m avc -c 'status.cgi' --raw | audit2allow -M nagios-statuscgi
    sudo semodule -i nagios-statuscgi.pp
  when: ansible_facts.selinux.mode == 'enforcing'
  ignore_errors: true

- name: Debug selinux status
  debug:
    msg: "SELinux status: {{ ansible_facts.selinux.status }}, Selinux mode: {{ ansible_facts.selinux.mode }}"

- name: Ensure /usr/local/nagios directory is added to SELinux exceptions
  command: semanage fcontext -a -t httpd_sys_script_rw_t "/usr/local/nagios(/.*)?"


- name: Reload systemd daemon if SELinux is enabled and errors are found
  command: systemctl daemon-reload


- name: Restart Nagios service if SELinux is enabled and errors are found
  systemd:
    name: nagios
    state: restarted

- name: Debug selinux status
  debug:
    msg: "SELinux status: {{ ansible_facts.selinux.status }}, Selinux mode: {{ ansible_facts.selinux.mode }}"
