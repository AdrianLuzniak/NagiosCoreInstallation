- name: Ensure group nagcmd exists
  group:
    name: nagcmd
    state: present


- name: Add nagios and nrpe users to nagcmd group
  user:
    name: "{{ item }}"
    groups: nagcmd
    append: yes
  loop:
    - nagios
    - nrpe

- name: Check if nrpe.cfg exists and is not empty
  stat:
    path: /etc/nagios/nrpe.cfg
  register: nrpe_cfg_check
  changed_when: false


- name: Show nrpe.cfg status message
  debug:
    msg: >-
      {%- if nrpe_cfg_check.stat.exists and nrpe_cfg_check.stat.size > 0 -%}
      ✅ NRPE config exists and is not empty
      {%- else -%}
      ❌ NRPE config is missing or empty
      {%- endif -%}
  changed_when: false


- name: Check if Nagios plugins exist (at least one file in libexec)
  find:
    paths: /usr/local/nagios/libexec
    file_type: file
  register: nagios_plugins_check
  failed_when: false


- name: Set fact if libexec exists and contains at least one plugin
  set_fact:
    libexec_exists: "{{ nagios_plugins_check.matched > 0 }}"


- name: Show libexec - plugin folder status message
  debug:
    msg: >-
      {%- if libexec_exists -%}
      ✅ libexec exists and is not empty
      {%- else -%}
      ❌ libexec is missing or empty
      {%- endif -%}
  changed_when: false


- name: Display info message about installation process
  debug:
    msg: >-
      {% if force_install_nrpe_and_plugins %}
      ✅ force_install_nrpe_and_plugins: {{ force_install_nrpe_and_plugins }} - installation will ALWAYS start
      {% else %}
      ❌ force_install_nrpe_and_plugins: {{ force_install_nrpe_and_plugins }} - installation will be SKIPPED if is NOT REQUIRED
      {% endif %}
  changed_when: false


- name: Set fact for installation condition
  set_fact:
    install_required: "{{ (not nrpe_cfg_check.stat.exists and not libexec_exists) or force_install_nrpe_and_plugins }}"


- name: Download Nagios Plugins source code
  get_url:
    url: "https://nagios-plugins.org/download/nagios-plugins-{{ nagios_plugins_version }}.tar.gz"
    dest: "/tmp/nagios-plugins-{{ nagios_plugins_version }}.tar.gz"
  when: install_required or force_install_nrpe_and_plugins


- name: Extract Nagios Plugins source code
  ansible.builtin.unarchive:
    src: "/tmp/nagios-plugins-{{ nagios_plugins_version }}.tar.gz"
    dest: "/tmp"
    remote_src: yes
  when: install_required or force_install_nrpe_and_plugins


- name: Compile and install Nagios Plugins
  shell: |
    cd /tmp/nagios-plugins-{{ nagios_plugins_version }}
    ./configure
    make
    make install
  args:
    executable: /bin/bash
  when: install_required or force_install_nrpe_and_plugins


- name: Install NRPE package
  dnf:
    name: nrpe
    state: present
  when: install_required or force_install_nrpe_and_plugins


- name: Enable and start NRPE
  systemd:
    name: nrpe
    state: started
    enabled: true
  when: install_required or force_install_nrpe_and_plugins

- name: Install NRPE plugin for Nagios
  dnf:
    name: nagios-plugins-nrpe
    state: present
  when: install_required or force_install_nrpe_and_plugins


- name: Check if check_nrpe exists at least in one location
  stat:
    path: "{{ item }}"
  register: check_nrpe_check
  with_items:
    - /usr/lib64/nagios/plugins/check_nrpe
    - /usr/local/nagios/libexec/check_nrpe


- name: Debug check_nrpe status
  debug:
    msg: >-
      {%- if check_nrpe_check.results[0].stat.exists or check_nrpe_check.results[1].stat.exists -%}
      ✅ check_nrpe plugin found in at least one location
      {%- else -%}
      ❌ check_nrpe plugin missing in both locations
      {%- endif %}


- name: Configure NRPE to allow Nagios server
  lineinfile:
    path: /etc/nagios/nrpe.cfg
    regexp: '^allowed_hosts='
    line: "allowed_hosts={{ '127.0.0.1,::1,' + (groups['servers'] | map('extract', hostvars, 'ansible_host') | list | default([])) | join(',') }}"
  notify:
    - Restart NRPE service
  when: install_required or add_allowed_hosts


- name: Remove duplicate command definitions from nrpe.cfg using blockinfile
  lineinfile:
    path: /etc/nagios/nrpe.cfg
    regexp: '^command\[check_.*\]='  # Delete duplicate lines, which begins from 'command[check_'
    state: absent



- name: Add custom NRPE commands
  blockinfile:
    path: /etc/nagios/nrpe.cfg
    marker: "# {mark} ANSIBLE GENERATED"
    block: |
      {% for item in nrpe_commands | unique(attribute='name') %}
      command[{{ item.name }}] = {{ item.command }}
      {% endfor %}
    backup: yes
  when: add_nrpe_commands



- name: Change owner and permissions of /usr/local/nagios/libexec directory and files inside
  file:
    path: /usr/local/nagios
    owner: nagios
    group: nagcmd
    mode: "2775"
    recurse: yes


- name: Change owner and permissions of /etc/nagios directory and files inside
  file:
    path: /etc/nagios
    owner: nrpe
    group: nrpe
    mode: "2775"
    recurse: yes

- name: Check if the file check_nrpe exists in "{{ default_nrpe_directory }}/check_nrpe"
  stat:
    path: "{{ default_nrpe_directory }}/check_nrpe"
  register: check_nrpe_exist_in_default_dir
  failed_when: false 


- name: Move check_nrpe plugin to plugins_directory
  copy:
    src: "{{ default_nrpe_directory }}/check_nrpe"
    dest: "{{ plugins_directory }}/check_nrpe"
    owner: nagios
    group: nagcmd
    mode: '2755'
    remote_src: yes
  when: (install_required or force_install_nrpe_and_plugins) and check_nrpe_exist_in_default_dir.stat.exists

- name: Remove source check_nrpe file after copying
  file:
    path: "{{ default_nrpe_directory }}/check_nrpe"
    state: absent


- name: Enable and start NRPE service
  systemd:
    name: nrpe
    state: started
    enabled: true
  when: install_required


- name: Open NRPE port in firewall
  firewalld:
    port: 5666/tcp
    permanent: true
    state: enabled
  when: install_required


- name: Reload firewall
  command: firewall-cmd --reload
  when: install_required

- name: Kill all NRPE processes
  command: pkill -9 nrpe
  ignore_errors: yes

- name: Restart NRPE service
  systemd:
    name: nrpe
    state: restarted

- name: Verify check_load command output
  command: "{{ plugins_directory }}/check_load -w 5,4,3 -c 10,8,6"
  register: check_load_result
  changed_when: false
  failed_when: check_load_result.rc != 0

- name: Debug check_load output
  debug:
    msg: "{{ check_load_result.stdout }}"


- name: Verify NRPE check_load command output
  command: "{{ plugins_directory }}/check_nrpe -H localhost -c check_load"
  register: check_load_NRPE_result
  changed_when: false
  failed_when: check_load_NRPE_result.rc != 0

- name: Debug NRPE check_load output
  debug:
    msg: "{{ check_load_NRPE_result.stdout }}"


# - name: Extract NRPE command names for Nagios Server
#   set_fact:
#     nrpe_commands: "{{ nrpe_commands | map(attribute='name') | list }}"